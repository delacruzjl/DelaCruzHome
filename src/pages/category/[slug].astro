---
import Layout from "../../layouts/Layout.astro";
import PostResult from "../../components/PostResultList.astro";
import BorderedTitle from "../../components/BorderedTitle.astro";
import { PostService } from "../../lib/post-service";

export async function getStaticPaths({}) {
    // // get from API
    const postService = new PostService()
    const pages = await postService.getPosts()

    const allCategories = new Set()

    pages.forEach(post => {
        if (post.categories) {
          post.categories.forEach(cat => 
            allCategories.add(cat.name?.toLowerCase()))
        } 
    })

    return Array.from(allCategories).map((cat: any) => {
      // All the posts that match the current `tag`
      const filteredPosts = pages.filter((post) => 
        cat.toLowerCase() === 'all' || 
        post.categories?.findIndex(c => c.name.toLowerCase() === cat.toLowerCase()) > -1)

      return {
          params: { 
              slug: cat.toLowerCase() || 'all'
          },
          props: {
              pages: filteredPosts
          }
      };
    });
}

const { pages } = Astro.props // pages prop passed in `getStaticPaths`
const pageTitle = `Category: ${Astro.params["slug"]}`

---

<Layout>
  <section class="section-sm">
    <div class="container">
      <div class="columns is-multiline">
        <div class="column is-12">
          <BorderedTitle title={pageTitle} />
          
        {pages && pages?.map((post: any) => (
          <PostResult 
            author={post.author}
            categories={post.categories }
            postDate={post.date}
            postSummary={post.summary}
            tags={post.tags }
            postUrl={post.url}
            postTitle={post.title}
            images={post.images}
          />
        ))}

    </div>
  </div>
</div>
</section>
</Layout>