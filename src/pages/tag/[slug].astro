---
import Layout from "../../layouts/Layout.astro";
import { loadEnv } from 'vite';
import { renderRichText } from '@storyblok/astro';
import PostResult from "../../components/PostResultList.astro";
import BorderedTitle from "../../components/BorderedTitle.astro";
import { BlogPost, PostService } from "../../lib/post-service";

export async function getStaticPaths({}) {

    // // get from API
    const postService = new PostService()
    const pages = await postService.getPosts()
    const allTags = new Set()

    pages.forEach(post => {
      if (post.tags) {
        post.tags.forEach(tag => {
          allTags.add(tag?.name.toLowerCase())
        })
      }
  })

  return Array.from(allTags).map((tag: any) => {
    // All the posts that match the current `tag`
    const filteredPosts = pages.filter((post) => tag.toLowerCase() === 'all' || post.tags?.findIndex(t => t.name.toLowerCase() === tag.toLowerCase()) > -1)

    return {
        params: { 
            slug: tag.toLowerCase() || 'all'
        },
        props: {
            pages: filteredPosts
        }
    };
  });
}

const {  pages } = Astro.props // pages prop passed in `getStaticPaths`

const pageTitle = `Tag: ${Astro.params["slug"]}`
---

<Layout>

  <section class="section-sm">
    <div class="container">
      <div class="columns is-multiline">
        <div class="column is-12">

  <BorderedTitle title={pageTitle} />

        {pages && pages?.map((post: any) => (
          <PostResult 
            author={post.author}
            categories={post.categories }
            postDate={post.date}
            postSummary={post.summary}
            tags={post.tags }
            postUrl={post.url}
            postTitle={post.title}
            images={post.images}
          />
        ))}

    </div>
  </div>
</div>
</section>
</Layout>